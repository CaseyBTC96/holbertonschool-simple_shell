#include "shell.h"
#include <stdlib.h>
#include <unistd.h>
#include <sys/wait.h>
#include <stdio.h>
/**
 * _execute - Fork process and replace the child with a new  program
 * @arguments: string of arguments (tokens)
 * @argv: array of arguments
 * @exit_status: Exit status
 * Return: Always 1 (success)
 */
int _execute(char *file, char *const args[], char *const env[])
{
		/* execute a completley new program instead of the child */
	  if (execve(file, args, env) == -1)
		{
			perror("execve fail");
			/* free (new_arguments) */
			exit(EXIT_FAILURE);
		}
	}
	else if (pid < 0)  /* check if fork
	{
	  
	}
	return (1);
}
	
